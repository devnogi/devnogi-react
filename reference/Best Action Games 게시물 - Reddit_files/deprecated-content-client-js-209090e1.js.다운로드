import"./faceplate-switch-input-efa0410b.js";import{s as t,a as e,x as s,o as i,w as n,I as r}from"./icon-feb8496e.js";import{_ as o,g as l,n as a,e as u,E as d,c3 as h,t as p,u as c,v as C,a4 as b,J as f,H as m}from"./shell-47d14d7f.js";import{R as v,M as x}from"./blurredContent-af81a79b.js";import"./shreddit-interactable-element-aec29b4e.js";import"./helpers-2f40d61f.js";import"./constants-d95f0f33.js";import"./community-picker-991cd74c.js";import"./age-gate-standalone-client-js-2c5a180c.js";const w=t=>{switch(t){case v.Spoiler:return"View spoiler";case v.NsfwAndSpoiler:return"후방주의 콘텐츠 및 스포일러 보기";default:return"후방주의 콘텐츠 보기"}};let g=class extends t{constructor(){super(),this.blurred=!0,this.isNsfwAllowed=!0,this.blurRadius=40,this.mode=x.Slot,this.isCrosspost=!1,this.isRichtextContent=!1,this.hasMetadata=!1,this._windowEvents=new d(this,(()=>window)),this.handleNsfwEvent=t=>{if("xpromo/view/nsfw_blur"===t.SAN){this.isNsfwAllowed=!1;const t=this.querySelector('div[slot="revealed"]');t&&this.removeChild(t)}},this._windowEvents.define(h,this.handleNsfwEvent)}static get styles(){return[p,e`.outer{width:100%;overflow:hidden;z-index:0;position:relative}.overlay{cursor:pointer;position:absolute;width:100%;height:100%;top:0;left:0;z-index:1;display:flex;justify-content:center;align-items:center}.inner.blurred{display:block;pointer-events:none;background:rgba(0,0,0,.8)}.legacy-button{background:rgba(0,0,0,.07);border:1px solid #fff;color:#fff;padding:10px 20px;position:absolute;text-transform:uppercase;cursor:pointer}`]}renderOverlay(t){const e=this.reason?c({appearance:"media",size:C.Small,shape:"pill",children:w(this.reason)}):s``;return this.reason===v.Spoiler&&this.blurred?s`${y({content:e})}`:this.isNsfwAllowed&&this.blurred&&t?y({content:e}):""}render(){const t=this.isRichtextContent&&this.blurred,e=this.reason===v.NSFW||this.reason===v.NsfwAndSpoiler;return s` <div class="${b({outer:!0,"xs:rounded-t-[16px]":!!this.reason&&!this.isCrosspost&&this.blurred,"xs:rounded-b-[16px]":!!this.reason&&!this.isCrosspost&&(t||!this.hasMetadata)&&this.blurred,"h-[88px]":t,"h-full":!t})}" @click="${this.handleClick}"> ${this.renderOverlay(e)} <span class="${b({inner:!0,blurred:this.blurRadius>0&&this.blurred})}" style="${i({filter:this.blurred&&this.blurRadius>0&&`blur(${this.blurRadius}px)`||"none"})}" aria-hidden="${Boolean(this.blurred)}" aria-live="polite"> ${this.mode===x.Slot&&this.blurred?s` <slot name="blurred"></slot> `:s` <slot name="revealed"></slot> `} </span> ${this.blurred?s`<div class="absolute top-0 left-0 w-full h-full bg-scrim"></div>`:""} </div> `}handleClick(){const t=this.reason===v.NSFW||this.reason===v.NsfwAndSpoiler;(this.reason===v.Spoiler&&this.blurred||this.blurred&&t)&&(this.isNsfwAllowed||this.reason===v.Spoiler)&&(this.blurred=!1)}};o([l()],g.prototype,"blurred",void 0),o([l()],g.prototype,"isNsfwAllowed",void 0),o([a({type:Number,attribute:"blur-radius"})],g.prototype,"blurRadius",void 0),o([a({type:String})],g.prototype,"reason",void 0),o([a({type:String})],g.prototype,"mode",void 0),o([a({type:Boolean,attribute:"is-crosspost"})],g.prototype,"isCrosspost",void 0),o([a({type:Boolean,attribute:"is-richtext-content"})],g.prototype,"isRichtextContent",void 0),o([a({type:Boolean,attribute:"has-metadata"})],g.prototype,"hasMetadata",void 0),g=o([u("shreddit-blurred-container")],g);const y=({content:t})=>s`<div data-ignore-click-interception class="overlay">${t}</div>`;const B=f(t);let A=class extends B{constructor(){super(...arguments),this.blurredContainer=null,this.handleSlotchange=t=>{if(!(t.target instanceof HTMLSlotElement))return;const e=t.target.assignedNodes({flatten:!0});for(const t of e)if(t instanceof g){this.blurredContainer=t,this.blurredContainer.setAttribute("blurred","");break}}}static get styles(){return[p,m(":host {\n  display: block;\n  position: relative;\n  height: 100%;\n}\n.prompt.hidden {\n  display: none;\n}\n.prompt {\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.45);\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  left: 0;\n  justify-content: center;\n  position: absolute;\n  top: 0;\n  width: 100%;\n}\n.icon {\n  color: hsla(0, 0%, 100%, 0.6);\n  font-size: 36px;\n  text-align: center;\n}\n.title,\n.text {\n  color: hsla(0, 0%, 100%, 0.8);\n  max-width: 300px;\n  text-align: center;\n}\n.title {\n  font: var(--font-title-h3);\n  margin: 18px 0 0;\n}\n.text {\n  font: var(--font-title-h4);\n  font-weight: normal;\n  margin: 10px 0 24px;\n}\n@media (max-width: 320px) {\n  .text {\n    margin: 12px 0 20px;\n  }\n}\n")]}render(){return s` <slot @slotchange="${this.handleSlotchange}"></slot> <div class="prompt"> <div class="icon">${n({size:r.ExtraLarge})}</div> <h3 class="title"> \uC131\uC778\uC6A9 \uCF58\uD150\uCE20 </h3> <p class="text"> \uC774 \uAC8C\uC2DC\uBB3C\uC740 \uC131\uC778\uC6A9 \uCF58\uD150\uCE20\uC774\uBA70 \uC77C\uBD80 \uC0AC\uC6A9\uC790\uC5D0\uAC8C \uBD80\uC801\uD569\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uACC4\uC18D\uD558\uB824\uBA74 \uC571\uC5D0\uC11C \uBCF8\uC778 \uC5F0\uB839\uC774 \uB9CC 19\uC138 \uC774\uC0C1\uC784\uC744 \uC778\uC99D\uD558\uACE0 \uC775\uBA85\uC73C\uB85C \uB458\uB7EC\uBCF4\uC138\uC694. </p> <slot name="view-in-app-button"></slot> </div> `}};A=o([u("xpromo-nsfw-blocking-container")],A);
